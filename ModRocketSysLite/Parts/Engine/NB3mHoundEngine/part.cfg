PART
{


// --- general parameters ---
name = NB3mHoundEngine
module = Part
author = NecroBones

// --- asset parameters ---
mesh = model.mu

scale = 1.0
rescaleFactor = 1

// --- node definitions ---
node_stack_top = 0.0, 1.05, 0.0, 0.0, 1.0, 0.0, 3
node_stack_bottom = 0.0, -0.95, 0.0, 0.0, -1.0, 0.0, 3


// --- FX definitions ---

fx_exhaustFlame_blue_small = 0.0, -0.5, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_blue = 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, running
fx_smokeTrail_light = 0.0, -0.5, 0.0, 0.0, 1.0, 0.0, running

// --- Sound FX definition ---

sound_vent_medium = engage
sound_rocket_hard = running
sound_vent_soft = disengage
sound_explosion_low = flameout

// --- editor parameters ---
TechRequired = veryHeavyRocketry
entryCost = 4800
cost = 3000
category = Propulsion
subcategory = 0
title = MRS Liquid Fuel Engine, 3.75m "Hound"
manufacturer = Modular Rocket Systems
description = Relatively efficient for a chemical rocket engine, the "Hound" is designed to move reasonably large payloads in style.

	tags = )hound ?mrs modul lander orbit propuls rocket

attachRules = 1,0,1,0,0

// --- standard part parameters ---
mass = 5
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
breakingForce = 200
breakingTorque = 200
maxTemp = 2000
bulkheadProfiles = size3
	heatConductivity = 0.06 // half default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.8 // engine nozzles are good at radiating.


MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = thrustTransform
	exhaustDamage = True
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 600
	heatProduction = 100
	fxOffset = 0, 0, 0.5
	EngineType = LiquidFuel
	PROPELLANT
	{
		name = LiquidFuel
        	ratio = 0.9
		DrawGauge = True
	}
	PROPELLANT
	{
		name = Oxidizer
		ratio = 1.1
	}
		atmosphereCurve
		{
			key = 0 350
			key = 1 90
			key = 3 0.001
		}
	
}

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.6
		maxDistance = 30
		falloff = 1.5
		thrustTransformName = thrustTransform
	}

MODULE
{
       name = ModuleJettison
       jettisonName = fairing
       bottomNodeName = bottom
       isFairing = True
       jettisonedObjectMass = 0.5
       jettisonForce = 15
       jettisonDirection = 0 0 1
	
}

MODULE
{
	name = ModuleGimbal
	gimbalTransformName = thrustTransform
	gimbalRange = 4.5
}

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.6
		maxDistance = 30
		falloff = 1.5
		thrustTransformName = thrustTransform
	}

//MODULE
//{
//	name = ModuleAnimateHeat
//	ThermalAnim = 3mTerrierEngine
//}
	MODULE
	{
		name = FXModuleAnimateThrottle
		animationName = 3mTerrierEngine
		responseSpeed = 0.001
		dependOnEngineState = True
		dependOnThrottle = True
	}

MODULE
{
	name = ModuleAlternator	
	RESOURCE
	{
		name = ElectricCharge
		rate = 10.0
	}
}
RESOURCE
{
	name = ElectricCharge
	amount = 0
	maxAmount = 0
  	isTweakable = false
	hideFlow = true
}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
RESOURCE
{
	name = HypergolicFluid
	amount = 20
	maxAmount = 20
}
MODULE
{
	name = ModuleEngineIgnitor
	ignitionsAvailable = 32
	autoIgnitionTemperature = 800
	ignitorType = Internal_Small
	IGNITOR_RESOURCE
	{
		name = HypergolicFluid
		amount = 1.0
		// 20 Ignitions (Using HypergolicFluid)
	}
}

}
